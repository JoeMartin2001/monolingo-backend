# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  accessToken: String!
  refreshToken: String!
}

input CreateUserInput {
  """Avatar URL"""
  avatarUrl: String!

  """Bio"""
  bio: String!

  """Email"""
  email: String!

  """Language Level"""
  level: LanguageLevel!

  """Native Language"""
  nativeLanguage: String!

  """Password"""
  password: String!

  """Target Language"""
  targetLanguage: String!

  """Username"""
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""CEFR language proficiency levels"""
enum LanguageLevel {
  A1
  A2
  B1
  B2
  C1
  C2
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  login(input: LoginInput!): Auth!
  refreshToken(token: String!): Auth!
  removeUser(id: String!): User!
  signup(input: CreateUserInput!): Auth!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  findOne(id: String!): User!
  users: [User!]!
}

input UpdateUserInput {
  """Avatar URL"""
  avatarUrl: String

  """Bio"""
  bio: String

  """Email"""
  email: String
  id: String!

  """Language Level"""
  level: LanguageLevel

  """Native Language"""
  nativeLanguage: String

  """Password"""
  password: String

  """Target Language"""
  targetLanguage: String

  """Username"""
  username: String
}

type User {
  avatarUrl: String!
  bio: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  isStudent: Boolean!
  languagesLearning: [String!]!
  languagesTeaching: [String!]!
  level: LanguageLevel!
  nativeLanguage: String!
  role: String!
  targetLanguage: String!
  updatedAt: DateTime!
  username: String!
}