# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  accessToken: String!
  refreshToken: String!
  user: User!
}

input CreateUserInput {
  authProvider: IUserAuthProvider
  avatarUrl: String
  bio: String
  email: String!
  emailVerified: Boolean
  emailVerifiedAt: DateTime

  """Google account ID if linking"""
  googleId: String
  isStudent: Boolean
  languagesLearning: [String!]
  languagesTeaching: [String!]
  level: LanguageLevel!
  nativeLanguage: String!
  password: String
  role: IUserRole
  targetLanguage: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""User auth providers"""
enum IUserAuthProvider {
  GOOGLE
  LOCAL
}

"""User roles"""
enum IUserRole {
  STUDENT
  TUTOR
}

"""CEFR language proficiency levels"""
enum LanguageLevel {
  A1
  A2
  B1
  B2
  C1
  C2
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  googleAuth(token: String!): Auth!
  login(input: LoginInput!): Auth!
  refreshToken(token: String!): Auth!
  removeUser(id: String!): User!

  """Get presigned PUT URL for avatar"""
  requestAvatarUploadUrl(filename: String!, mime: String!): PresignedUrl!
  requestPasswordReset(input: RequestPasswordResetInput!): Boolean!
  resendVerification(email: String!): ResendVerification!
  resetPassword(input: ResetPasswordInput!): Boolean!
  signup(input: RegisterInput!): Auth!
  updateUser(updateUserInput: UpdateUserInput!): User!
  verifyEmail(token: String!): VerifyEmail!
}

type PresignedUrl {
  key: String!
  url: String!
}

type Query {
  findOne(id: String!): User!
  users: [User!]!
}

input RegisterInput {
  avatarUrl: String
  bio: String
  email: String!
  level: LanguageLevel!
  nativeLanguage: String!
  password: String!
  targetLanguage: String!
  username: String!
}

input RequestPasswordResetInput {
  email: String!
}

type ResendVerification {
  alreadyVerified: Boolean!
  success: Boolean!
}

input ResetPasswordInput {
  newPassword: String!
  token: String!
}

input UpdateUserInput {
  authProvider: IUserAuthProvider
  avatarUrl: String
  bio: String
  email: String
  emailVerified: Boolean
  emailVerifiedAt: DateTime

  """Google account ID if linking"""
  googleId: String
  id: String!
  isStudent: Boolean
  languagesLearning: [String!]
  languagesTeaching: [String!]
  level: LanguageLevel
  nativeLanguage: String
  password: String
  role: IUserRole
  targetLanguage: String
  username: String
}

type User {
  authProvider: String!
  avatarUrl: String!
  bio: String!
  createdAt: DateTime!
  email: String!
  emailVerified: Boolean!
  emailVerifiedAt: DateTime
  id: ID!
  isStudent: Boolean!
  languagesLearning: [String!]!
  languagesTeaching: [String!]!
  level: LanguageLevel!
  nativeLanguage: String!
  role: String!
  targetLanguage: String!
  updatedAt: DateTime!
  username: String!
}

type VerifyEmail {
  accessToken: String!
  alreadyVerified: Boolean!
  refreshToken: String!
  success: Boolean!
  tokenExpired: Boolean!
  user: User!
}